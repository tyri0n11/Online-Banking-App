/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package banking;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */

public class CreateSaving extends javax.swing.JFrame {
    private final int accno;
    String jdbcUrl = "jdbc:sqlserver://localhost:1433;databaseName=PRESENT;user=sa;password=sa;encrypt=true;trustServerCertificate=true";
    /**
     * Creates new form CreateSaving
     * @param accno
     */
    public CreateSaving(int accno) {
        initComponents();
        this.accno = accno;
        this.setTitle("Open A Saving Account");
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInitialAm = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtDuration = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtInitialAm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 0));
        jLabel6.setText("months");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 0));
        jLabel10.setText("Duration");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 64)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 0));
        jLabel2.setText("Open Saving Account");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 0));
        jLabel8.setText("Amount");

        btnCreate.setBackground(new java.awt.Color(0, 153, 0));
        btnCreate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 153, 0));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtDuration.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtDuration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "6", "12" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel2)
                .addGap(0, 135, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInitialAm, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInitialAm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnCreate))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Account_Information acc = new Account_Information(accno);
        acc.setTitle("Account Information");
        acc.setVisible(true);
        acc.setLocationRelativeTo(null);
        acc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        try {
        // Get values from the form
        double initialAmount = Double.parseDouble(txtInitialAm.getText());
        int duration = Integer.parseInt(txtDuration.getSelectedItem().toString());

        // Check if initialAmount is less than or equal to the balance of the main account
        if (isSufficientBalance(initialAmount)) {
            // Check if the user already has a Saving Account
            if (!hasExistingSavingAccount()) {
                // Call the method to calculate close date

                // Insert values into the SavingAccount table
                String insertSql = "INSERT INTO SavingAccount (inititial_Amount, Duration, open_date, Account_No) " +
                                "VALUES (?, ?, ?, ?)";

                // Update balance of the main account
                String updateSql = "UPDATE Accounts SET balance = balance - ? WHERE Account_No = ?";
                System.out.println(insertSql);
                System.out.println(updateSql);

                try (Connection connection = DriverManager.getConnection(jdbcUrl);
                    PreparedStatement insertStatement = connection.prepareStatement(insertSql);
                    PreparedStatement updateStatement = connection.prepareStatement(updateSql)) {
                    
                    // Set parameters for the insert statement
                    insertStatement.setDouble(1, initialAmount);
                    insertStatement.setInt(2, duration);
                    insertStatement.setDate(3, new java.sql.Date(System.currentTimeMillis())); // Use current date as a parameter
                    insertStatement.setInt(4, accno);

                    // Set parameters for the update statement
                    updateStatement.setDouble(1, initialAmount);
                    updateStatement.setInt(2, accno);

                    // Execute the insert statement
                    int affectedRowsInsert = insertStatement.executeUpdate();

                    // Execute the update statement
                    int affectedRowsUpdate = updateStatement.executeUpdate();

                    // Display success message to the user
                    JOptionPane.showMessageDialog(null, "Saving Account created successfully!");
                    
                    // Close the current window
                    setVisible(false);
                    Account_Information acc = new Account_Information(accno);
                    acc.setVisible(true);
                    acc.setLocationRelativeTo(null);
                    acc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                } catch (SQLException ex) {
                    Logger.getLogger(CreateSaving.class.getName()).log(Level.SEVERE, null, ex);
                    // Display an error message to the user
                    JOptionPane.showMessageDialog(null, "Failed to create Saving Account. Please try again.");
                }
            } else {
                // Display a message to the user indicating that they are not allowed to create another Saving Account
                JOptionPane.showMessageDialog(null, "You already have an existing Saving Account. You cannot create another one now due to System development.");
            }
        } else {
            // Display a message to the user indicating insufficient balance
            JOptionPane.showMessageDialog(null, "Insufficient balance in the main account!");
        }

    } catch (NumberFormatException e) {
        // Handle the case where the user entered invalid input
        JOptionPane.showMessageDialog(null, "Invalid input. Please enter valid values.");
    }
    }//GEN-LAST:event_btnCreateActionPerformed

    private boolean isSufficientBalance(double initialAmount) {

    try (Connection connection = DatabaseAccess.getConnection();) {
        // Query to retrieve the balance of the main account
        String query = "SELECT balance FROM Accounts WHERE Account_No = ?";
        System.out.println(query);
        try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
            preparedStatement.setInt(1, accno); // Assuming accno is the account number of the main account

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    double mainAccountBalance = resultSet.getDouble("balance");
                    return initialAmount <= mainAccountBalance;
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace(); // Handle the exception appropriately based on your application's needs
    }

    return false; // Return false in case of an error
}
private boolean hasExistingSavingAccount() {
    String query = "SELECT COUNT(*) AS count FROM SavingAccount WHERE Account_No = ?";
    System.out.println(query);
    try (Connection connection = DriverManager.getConnection(jdbcUrl);
         PreparedStatement preparedStatement = connection.prepareStatement(query)) {

        preparedStatement.setInt(1, accno);

        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                int count = resultSet.getInt("count");
                return count > 0;
            }
        }
    } catch (SQLException e) {
        e.printStackTrace(); // Handle the exception appropriately based on your application's needs
    }

    return false; // Return false in case of an error
}


   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox<String> txtDuration;
    private javax.swing.JTextField txtInitialAm;
    // End of variables declaration//GEN-END:variables
}
